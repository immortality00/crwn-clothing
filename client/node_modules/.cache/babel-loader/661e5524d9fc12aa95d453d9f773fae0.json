{"ast":null,"code":"var _jsxFileName = \"/Users/immortality00/Desktop/crwn-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CartItem from \"../cart-item/cart-item\";\nimport { selectCartItems } from \"../../redux/cart/cart-selector\";\nimport { CartDropdownStyles, CartItemsStyles, CartDropdownButton, EmptyMessageStyles } from \"./cart-dropdown.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart-actions\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropdownStyles, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(CartItemsStyles, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})) : React.createElement(EmptyMessageStyles, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Your Cart Is Empty\")), React.createElement(CartDropdownButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/immortality00/Desktop/crwn-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","connect","createStructuredSelector","CartItem","selectCartItems","CartDropdownStyles","CartItemsStyles","CartDropdownButton","EmptyMessageStyles","withRouter","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,kBADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,wBALP;AAMA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,GAKC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,EAUE,oBAAC,kBAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAsBA,MAAMU,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CU,EAAAA,SAAS,EAAER;AADoC,CAAD,CAAhD;AAIA,eAAeK,UAAU,CAACR,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CartItem from \"../cart-item/cart-item\";\nimport { selectCartItems } from \"../../redux/cart/cart-selector\";\nimport {\n  CartDropdownStyles,\n  CartItemsStyles,\n  CartDropdownButton,\n  EmptyMessageStyles\n} from \"./cart-dropdown.styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart-actions\";\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropdownStyles>\n    <CartItemsStyles>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessageStyles>Your Cart Is Empty</EmptyMessageStyles>\n      )}\n    </CartItemsStyles>\n    <CartDropdownButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CartDropdownButton>\n  </CartDropdownStyles>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}